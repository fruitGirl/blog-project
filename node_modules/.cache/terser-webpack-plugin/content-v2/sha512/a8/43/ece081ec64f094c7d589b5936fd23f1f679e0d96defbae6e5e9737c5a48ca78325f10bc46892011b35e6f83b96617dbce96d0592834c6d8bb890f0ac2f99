{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{429:function(n,s,a){\"use strict\";a.r(s);var e=a(2),t=Object(e.a)({},(function(){var n=this,s=n._self._c;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":n.$parent.slotKey}},[s(\"p\",[n._v(\"1.Legend-绘制图例超过一行，发现多的会被隐藏\")]),n._v(\" \"),s(\"blockquote\",[s(\"p\",[n._v(\"解决方案：目前只能用userHtml={true}进行自定义图例\")])]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\" {/* 图例部分 */}\\n    <Legend position='bottom'\\n        useHtml={true} // 解决图例过多，有的会隐藏的问题\\n        g2-legend = {{ // 自定义模板时必须包含各个 dom 节点的 class，样式可以自定义\\n          marginLeft: '100px',\\n          marginTop: '-107px',\\n          position: \\\"static\\\",\\n        }}\\n        g2-legend-list={{\\n          border: 'none'\\n        }}\\n      />\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\")])]),s(\"p\",[n._v(\"2.数据过多会挤在一起，想拖动到一定范围查看具体细节\")]),n._v(\" \"),s(\"blockquote\",[s(\"p\",[n._v(\"解决方案：使用slider与图表进行关联\")])]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v('<Slider data={slideData} width=\"auto\" start={ds.state.start} scales={{\\n  dimension: {\\n    // type: \\'time\\', // 加type为time，报错Invalid Date in fecha.format\\n    // mask: \\'YY-MM-DD\\'\\n  }\\n}}\\nend={ds.state.end} xAxis=\"dimension\"\\nyAxis=\"kpi\" onChange={this.onChange.bind(this, {dataLists: dataLists, ds: ds, dv: dv})} padding={[0, 80, 0, 80]}/>\\n')])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\")])]),s(\"ul\",[s(\"li\",[n._v(\"[x] 注意：这里有个坑，我原本是想通过scales来设置时间的格式，发现正常渲染没有问题，但是一要更新数据，就会报Invalid Date in fecha.format这个错误，后来查找资料发现是bizchart里面对刚开始空数据没有做处理，他只在3.0.9以上的版本修复了chart里面的time、timeCat格式的，但是slider里面的貌似还是不行。\")])]),n._v(\" \"),s(\"p\",[n._v(\"所以我放弃了这个方案，直接选择在底层数据里面进行处理转换。\")]),n._v(\" \"),s(\"p\",[n._v(\"3.接到一个折线图或者柱状图会有两个x轴的需求，翻了一下bizChart的文档发现并不支持，emmm....,？\")]),n._v(\" \"),s(\"blockquote\",[s(\"p\",[n._v(\"解决方案： 我能怎么办，如果有两个x轴，我只能再画一个咯，看到bizChart的Guide里面有辅助线Line和文本Text，就用他俩了，看代码吧\")])]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(\"// 去重+重复的个数\\ntransArray = (arr) => {\\n    let obj = {};\\n    const newArr = [];\\n    arr.forEach((v,k)=>{\\n      if(obj[v]){\\n        obj[v]++;\\n      }else{\\n        obj[v] = 1;\\n      }\\n    });\\n    for (let index in obj){\\n      newArr.push({name: index, num: obj[index]});\\n    }\\n    return newArr;\\n  }\\n// 转换成guideTextList=[{name: '公海', num: 2},{name: '啥地区', num: 5}]这种格式，为画第二个x轴做准备\\nconst guideTextList = this.transArray(data);\\n\\n<Guide>\\n  {guideTextList.map((item, i) => {\\n    return  (<div>\\n      <Text \\n        style={style} // 文本样式\\n        top={true}\\n        content={item.name} // 文本内容\\n        position={(xScale, yScale) => {\\n            // 这个就是返回每根辅助线的位置\\n          return [`${item.num/dataLists.length*50 + i * (item.num/dataLists.length*100)}%`, \\\"110%\\\"]\\n        }}\\n        offsetX= {0}\\n        offsetY= {offsetY}/>\\n        {/* 最后一根辅助线不需要 */}\\n      {guideTextList.length - 1 !== i && <Line \\n        style={lineStyle}\\n        start={[`${item.num/dataLists.length*100 + i * (item.num/dataLists.length*100)}%`, '100%']}\\n        end={[`${item.num/dataLists.length*100 + i * (item.num/dataLists.length*100)}%`, `${yLine}`]}/>}\\n    </div>)\\n  })}\\n</Guide>\\n\")])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"16\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"17\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"18\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"19\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"20\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"21\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"22\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"23\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"24\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"25\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"26\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"27\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"28\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"29\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"30\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"31\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"32\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"33\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"34\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"35\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"36\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"37\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"38\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"39\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"40\")]),s(\"br\")])]),s(\"p\",[n._v(\"4.emmm..写的差不多的时候发现，因为bizChart只支持一个x轴，如果我提供的数据源有重复的数据，他会自动渲染到一个x轴的点？\")]),n._v(\" \"),s(\"blockquote\",[s(\"p\",[n._v(\"解决方案：把每个x轴的数据都加上\"),s(\"code\",[n._v(\"？${index}\")]),n._v(\",在x轴渲染的时候再转换成自己想要的数据，如下\")])]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v('const label = {\\n  formatter: val => {\\n    const index = val.indexOf(\"?\");\\n    return val.slice(0, index);\\n  },\\n  textStyle: {\\n    fontSize: \\'12\\',\\n    textBaseline: \\'top\\'\\n  },\\n  autoRotate: true,\\n}\\nconst cols = {\\n  kpi: {\\n    min: 0,\\n  },\\n  dimension: {\\n    tickCount: 10, // 展示10个横坐标刻度\\n  }\\n}\\n<Chart\\n  height={height}\\n  data={dv}\\n  scale={cols}\\n  padding={padding}\\n  forceFit\\n> \\n  {/* 坐标轴部分 */}\\n  <Axis name=\"dimension\" label={label}/>\\n  <Axis name=\"kpi\"/>\\n  //因为把原数据全加上了`？${index}`， tooltip也需要自定义，把数据处理一下\\n  <Geom type=\"line\" position=\"dimension*kpi\" color=\"genre\" style={{ cursor: \\'pointer\\' }} tooltip={[\\'dimension*kpi*genre\\', (dimension, kpi, genre) => {\\n      return {\\n        //自定义 tooltip 上显示的 title 显示内容等。\\n        name: genre,\\n        title: dimension.slice(0, dimension.indexOf(\"?\")),\\n        value: kpi,\\n      };\\n    }]}/>\\n </Chart>\\n')])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"16\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"17\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"18\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"19\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"20\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"21\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"22\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"23\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"24\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"25\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"26\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"27\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"28\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"29\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"30\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"31\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"32\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"33\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"34\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"35\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"36\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"37\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"38\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"39\")]),s(\"br\")])]),s(\"ul\",[s(\"li\",[n._v(\"[x] 注意：\")]),n._v(\" \"),s(\"li\",[n._v(\"tooltip自定义时['dimension\"),s(\"em\",[n._v(\"kpi\")]),n._v(\"genre']这个是array，里面可以写多个，我一直以为是两个参数\")]),n._v(\" \"),s(\"li\",[n._v(\"两个x轴的时候，由于我把x轴的数据源转换成不会重复的，最好x轴用tickCount这个属性写死固定的个            数，以免数据展示的时候会很拥挤\")])]),n._v(\" \"),s(\"p\",[n._v(\"5.图例要显示日期的格式的时候，日期过多，图例显示不出来\")]),n._v(\" \"),s(\"blockquote\",[s(\"p\",[n._v('解决方案：日期的时候type：\"cat\",')])]),n._v(\" \"),s(\"ul\",[s(\"li\",[n._v('[x] 注意：之前日期的时候压根没设置type，发现图例渲染的一直是连续时间戳，查找issue上，说日期需要加上type：timeCat，加上之后，图例少的时候是没有问题，于是我把api所有的type全测试了一遍type：\"cat\"没有问题，后续发现emmm...，这简直一个坑接着一个坑')])]),n._v(\" \"),s(\"p\",[n._v(\"最后吐槽一句，文档有点不详细，哈哈\")]),n._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[n._v(' const cols = {\\n    percent: {\\n      formatter: val => {\\n        val = (val * 100).toFixed(2) + \"%\";\\n        return val;\\n      }\\n    },\\n    \"时间\": {\\n      type: \"cat\"\\n    }\\n  };\\n\\n<Chart\\n  height={height}\\n  data={dv}\\n  scale={cols}\\n  padding={padding}\\n  forceFit\\n> </Chart>\\n')])]),n._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[n._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"16\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"17\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"18\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[n._v(\"19\")]),s(\"br\")])])])}),[],!1,null,null,null);s.default=t.exports}}]);","extractedComments":[]}